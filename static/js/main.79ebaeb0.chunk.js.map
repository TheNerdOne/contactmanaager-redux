{"version":3,"sources":["img/avatar-circle.png","actions/types.js","components/contacts/Contact.js","actions/contactActions.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/NotFound.js","components/pages/About.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["GET_CONTACT","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","Contact","state","showContactInfo","deleteClick","id","props","deleteContact","this","contact","name","email","phone","className","src","profile","alt","onClick","setState","style","styles","caret","to","pencil","bind","times","Component","defaultProps","connect","dispatch","a","axios","delete","type","payload","color","cursor","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","pOnChange","e","target","pOnSubmit","preventDefault","newContact","uuid","addContact","history","push","onSubmit","post","EditContact","updContact","match","params","updateContact","nextProps","nextState","getContact","singleContact","put","Header","branding","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","About","href","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createBrowserHistory","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79ebaeb0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-circle.a39e1bc0.png\";","export const GET_CONTACT = \"GET_CONTACT\";\r\nexport const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport profile from \"../../img/avatar-circle.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../actions/contactActions\";\r\nimport \"../../App.css\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false // used for show identity of each contact\r\n  };\r\n\r\n  deleteClick = id => {\r\n    this.props.deleteContact(id)\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact; //pass to Contacts component\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <div className=\"col-lg-6 offset-lg-3 col-md-8 offset-md-2 col-12 col-sm-12\">\r\n        <div className=\"card mb-3 p-card-hover mt-3\">\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-md-4 d-flex justify-content-center\">\r\n              <img\r\n                src={profile}\r\n                className=\"card-img img-fluid rounded-circle p-1 p-img-profile\"\r\n                alt=\"profile\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-8 d-flex align-items-center\">\r\n              <div className=\"card-body d-flex justify-content-between\">\r\n                <div className=\"contact-name d-flex align-items-baseline ml-3 pl-1\">\r\n                  <h5 className=\"card-title mr-1\">{name}</h5>\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showContactInfo: !this.state\r\n                          .showContactInfo /*toggle the state*/\r\n                      })\r\n                    }\r\n                    className=\"card-text fa fa-caret-down\"\r\n                    style={styles.caret}\r\n                  >\r\n                    {\" \"}\r\n                  </i>\r\n                </div>\r\n                <div className=\"contact-edit\">\r\n                  <Link to={`contact/edit/${id}`} className=\"mr-1 float-left\">\r\n                    {\" \"}\r\n                    <i\r\n                      className=\"card-text fa fa-pencil mr-2\"\r\n                      style={styles.pencil}\r\n                    />{\" \"}\r\n                  </Link>\r\n                  <i\r\n                    onClick={this.deleteClick.bind(this, id)}\r\n                    className=\"card-text fa fa-times\"\r\n                    style={styles.times}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {showContactInfo ? (\r\n            <ul className=\"list-group p-tran\">\r\n              <li className=\"list-group-item\">\r\n                {\" \"}\r\n                <i className=\"fa fa-envelope\" /> Email: {email}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                {\" \"}\r\n                <i className=\"fa fa-phone\" /> Phone: {phone}\r\n              </li>\r\n            </ul>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.defaultProps = {\r\n  // if we have'nt any state we need default values\r\n  contact: {\r\n    name: \"no name\",\r\n    email: \"no email\",\r\n    phone: \"no number\"\r\n  }\r\n};\r\n\r\nContact.propTypes = {\r\n  // check the propstypes\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{deleteContact})(Contact);\r\n\r\nconst styles = {\r\n  // just little styling\r\n  caret: {\r\n    color: \"#555\",\r\n    cursor: \"pointer\"\r\n  },\r\n  times: {\r\n    color: \"#F00\",\r\n    cursor: \"pointer\"\r\n  },\r\n  pencil: {\r\n    color: \"#777\"\r\n  }\r\n};\r\n\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getContact = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n  dispatch({\r\n    type: DELETE_CONTACT,\r\n    payload: id\r\n  });\r\n};\r\nexport const addContact = contact => async dispatch => {\r\n  const res = await axios.post(\r\n    \"https://jsonplaceholder.typicode.com/users\",\r\n    contact\r\n  );\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const updateContact = contact => async dispatch => {\r\n  const res = await axios.put(\r\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\r\n    contact\r\n  );\r\n  dispatch({\r\n    type: UPDATE_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { getContacts } from \"../../actions/contactActions\";\r\n\r\n  class Contacts extends Component {\r\n  \r\n    componentDidMount() {\r\n      this.props.getContacts();\r\n    }\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {contacts.map(contact => (\r\n          <Contact key={contact.id} contact={contact} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  getContacts: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact.contacts\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{getContacts})(Contacts);\r\n","import React from \"react\";\r\nimport classnames from 'classnames'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n        {error && <div className=\"invalid-feedback\">{error}</div> }\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport { addContact } from '../../actions/contactActions'\r\nimport uuid from \"uuid\";\r\n\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  pOnChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  pOnSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return null;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return null;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return null;\r\n    }\r\n\r\n    const newContact = {\r\n       id: uuid(),  //we dont need uuid in here because the all database and backends has a autoincrement id\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n\r\n    this.props.addContact(newContact);\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <div className=\"col col-md-6 offset-md-3 col-sm-12\">\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-header\">Add Contact</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.pOnSubmit}>\r\n              <TextInputGroup\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter Name...\"\r\n                onChange={this.pOnChange}\r\n                error={errors.name}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                type=\"email\"\r\n                placeholder=\"Enter Email...\"\r\n                onChange={this.pOnChange}\r\n                error={errors.email}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                placeholder=\"Enter Phone...\"\r\n                onChange={this.pOnChange}\r\n                error={errors.phone}\r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Add Contact\"\r\n                className=\"btn btn-success btn-block\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,{addContact})(AddContact);\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContact, updateContact } from \"../../actions/contactActions\";\r\n// import uuid from \"uuid\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    const { name, email, phone } = nextProps.contact;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getContact(id);\r\n  }\r\n\r\n  pOnChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  pOnSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return null;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return null;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return null;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      id,\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    this.props.updateContact(updContact);\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <div className=\"col col-md-6 offset-md-3 col-sm-12\">\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-header\">Edit Contact</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.pOnSubmit}>\r\n              <TextInputGroup\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter Name...\"\r\n                onChange={this.pOnChange}\r\n                error={errors.name}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                type=\"email\"\r\n                placeholder=\"Enter Email...\"\r\n                onChange={this.pOnChange}\r\n                error={errors.email}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                placeholder=\"Enter Phone...\"\r\n                onChange={this.pOnChange}\r\n                error={errors.phone}\r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Update Contact\"\r\n                className=\"btn btn-success btn-block\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  getContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contact: state.contact.singleContact\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getContact, updateContact }\r\n)(EditContact);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"true\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div\r\n          className=\"navbar-collapse collapse justify-content-end\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"navbar-nav float-right\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fa fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"my App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">we're sorry this page you looking for does not exist :(</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"displaye-4\">About Contact Manager App</h1>\r\n      <p className=\"lead\">\r\n        Hi, I'm poria and this is my first react app the contact manager with\r\n        context and json placeholder you can add new contact, delete and edit\r\n        them. it's not a big thing but if you have an idea (except the UI)\r\n        contact me in <a href=\"https://t.me/OneDevel0perArmy\">Telegram</a>\r\n      </p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT, GET_CONTACT, UPDATE_CONTACT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  singleContact: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        singleContact: action.payload\r\n      }\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case UPDATE_CONTACT: \r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload ) : contact)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport contactReducer from './contactReducer'\r\n\r\nexport default combineReducers({\r\n    contact: contactReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n// const initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  // initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Header from \"./components/layout/Header\";\nimport NotFound from \"./components/pages/NotFound\";\nimport About from \"./components/pages/About\";\n\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.bundle.js\";\n\nimport \"./App.css\";\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <Router history={history}>\n        <div className=\"text-left\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <div className=\"row\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}